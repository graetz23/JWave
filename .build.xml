<!--
  JWave is distributed under the MIT License (MIT); this file is part of.

  Copyright (c) 2008-2025 Christian (graetz23@gmail.com)

  see LICENSE.md

  This is the old ant file for building JWave, which is just kept for no reason.
-->
<project name="JWave" default="dist" basedir=".">

  <description>
    ant build file for JWave; https://github.com/graetz23/JWave
    TODO: Set your OS dependent path to the JUnit4 JAR file below!
    For Windows OS also set the path to org.hamcrest.core JAR file!
  </description>

  <!-- setting static directories and files -->
  <property name="src" location="src"/>
  <property name="test" location="test"/>
  <property name="dist" location="dist"/>
  <property name="build" location="build"/>
  <property name="jwave" location="${dist}/${ant.project.name}.jar"/>

  <!-- set conditions for checking the OS -->
  <condition property="isMac">
    <os family="mac" />
  </condition>

  <condition property="isWin">
    <os family="windows" />
  </condition>

  <condition property="isUnix">
    <os family="unix" />
  </condition>

  <!-- Set the MAC OS specific parameters -->
  <target name="doMac" if="isMac">
    <echo message="OS is a Mac target" />
    <!-- set the path to a MAC or Unix OS below -->
    <property name="junit" location="IS NOT SET - SET IT!"/>
    <!-- hamcrest NOT USED - DO NOOT SET -->
    <property name="hamcr" location=""/>
    <echo message="JUnit path: ${junit}" />
  </target>

  <!-- Set the Windows OS specific parameters -->
  <target name="doWin" if="isWin">
    <echo message="OS is a Windows target" />
    <!-- set the path to a Windows OS below -->
    <!-- property name="junit" location="C:\Portable\eclipse\plugins\org.junit_4.11.0.v201303080030\junit.jar"/-->
    <property name="junit" location="C:/Portable/eclipse/plugins/org.junit_4.11.0.v201303080030/junit.jar"/>
  	<property name="hamcr" location="C:/Portable/eclipse/plugins/org.hamcrest.core_1.3.0.v201303031735.jar"/>
    <echo message="JUnit path: ${junit}" />
  </target>

  <!-- Set the GNU/Linux or Unix OS specific parameters -->
  <target name="doUnix" if="isUnix">
    <echo message="OS is a Unix target" />
    <!-- set the path to a GNU/Linux or Unix OS below -->
  	<!-- on regular driven GNU/Linux OS the following should hold -->
    <!-- <property name="junit" location="/usr/share/java/junit4.jar"/> -->
  	<!-- for travis-ci.org, we change to while being in java directory -->
    <!-- <property name="junit" location="./junit4.jar"/> -->
    <property name="junit" location="./lib/junit4.jar"/>
    <!-- hamcrest NOT USED - DO NOT SET -->
    <property name="hamcr" location="./lib/hamcrest-all.jar"/>
    <echo message="JUnit path: ${junit}" />
  </target>

  <!-- set the OS dependent class paths and create directories -->
  <target name="init" depends="doMac, doWin, doUnix">
    <tstamp/>
    <path id="classpath.junit">
      <pathelement location="${junit}"/>
    </path>
    <path id="classpath.hamcr">
      <pathelement location="${hamcr}"/>
    </path>
  	<path id="classpath.jwave">
      <pathelement location="${jwave}"/>
    </path>
    <path id="classpath.tests">
      <pathelement location="${test}"/>
    </path>
    <path id="classpath.build">
      <pathelement location="${build}"/>
    </path>
    <mkdir dir="${build}"/>
    <mkdir dir="${dist}"/>
    <echo message="OS Name is:    ${os.name}" />
    <echo message="OS Arch. is:   ${os.arch}" />
    <echo message="OS Vers. is:   ${os.version}" />
    <echo message="JUnit path:    ${junit}" />
    <echo message="hamcrest path: ${hamcr}" />
  </target>

  <!-- compile all available Java classes -->
  <target name="compile" depends="init" description="compile the source">
    <javac srcdir="${src}" destdir="${build}" includeantruntime="false">
      <classpath refid="classpath.junit"/>
    </javac>
  </target>

  <!-- create JAR file from compiled class files without JUnit test cases -->
  <target name="dist" depends="compile" description="generates distribution">
    <jar jarfile="${dist}/JWave.jar" basedir="${build}"/>
    <!-- jar jarfile="${dist}/JWave-${DSTAMP}.jar" basedir="${build}"/ -->
  </target>

  <!-- run console example for JWave -->
  <target name="run" depends="dist" description="run console example">
    <java fork="true" failonerror="yes" classname="jwave.JWave">
      <classpath refid="classpath.jwave"/>
      <arg line="Fast Wavelet Transform Daubechies 20"/>
    </java>
  </target>

  <!-- compile JUnit test cases and run all available -->
  <target name="test" depends="dist" description="build and run JUnit tests">
    <javac srcdir="${test}" destdir="${build}" includeantruntime="false">
      <classpath refid="classpath.junit"/>
      <classpath refid="classpath.jwave"/>
    </javac>
    <junit haltonfailure="true" showoutput="true" printsummary="true">
      <classpath refid="classpath.junit"/>
      <classpath refid="classpath.hamcr"/>
      <classpath refid="classpath.jwave"/>
      <classpath refid="classpath.build"/>
      <formatter type="plain"/>
      <batchtest fork="yes" todir="${build}">
        <fileset dir="${build}">
          <include name="**/*Test.class"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <!-- tidy up all built stuff: Java and JUnit test case classes -->
  <target name="clean" description="clean up - delete build directory">
    <delete dir="${build}"/>
  </target>

</project>
